{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:3076/api/vanminh/account-vanminh';\nconst userApi = {\n  getAll: async (page = 1, limit = 10) => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.get(API_URL, {\n        params: {\n          page,\n          limit\n        },\n        headers: {\n          'Authorization': token\n        }\n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  getById: async id => {\n    try {\n      const response = await axios.get(`${API_URL}/${id}`);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  create: async userData => {\n    try {\n      const response = await axios.post(`${API_URL}/register`, userData);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  update: async (id, userData) => {\n    try {\n      const response = await axios.put(`${API_URL}/update/${id}`, userData);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  delete: async ids => {\n    try {\n      const response = await axios.delete(API_URL, {\n        data: {\n          ids\n        }\n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  login: async credentials => {\n    try {\n      const response = await axios.post(`${API_URL}/login`, credentials);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  register: async data => {\n    try {\n      const response = await axios.post(`${API_URL}/register`, data);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  getProfile: async () => {\n    try {\n      const response = await axios.get(`${API_URL}/profile`);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  updateProfile: async data => {\n    try {\n      const response = await axios.put(`${API_URL}/profile`, data);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  changePassword: async (userId, data) => {\n    try {\n      const response = await axios.post(`${API_URL}/${userId}/change-password`, data);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  getRoles: async userId => {\n    try {\n      const response = await axios.get(`${API_URL}/${userId}/roles`);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  assignRoles: async (userId, roleIds) => {\n    try {\n      const response = await axios.post(`${API_URL}/${userId}/roles`, {\n        roleIds\n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  resetPassword: async userId => {\n    try {\n      const response = await axios.post(`${API_URL}/${userId}/reset-password`);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n};\nexport default userApi;","map":{"version":3,"names":["axios","API_URL","userApi","getAll","page","limit","token","localStorage","getItem","response","get","params","headers","data","error","getById","id","create","userData","post","update","put","delete","ids","login","credentials","register","getProfile","updateProfile","changePassword","userId","getRoles","assignRoles","roleIds","resetPassword"],"sources":["/Users/huynhpt/Desktop/vanminhgroup-main/vanminhgroup-fe/src/api/userApi.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:3076/api/vanminh/account-vanminh';\n\nconst userApi = {\n    getAll: async (page = 1, limit = 10) => {\n        try {\n            const token = localStorage.getItem('token');\n            \n            const response = await axios.get(API_URL, {\n                \n                params: { page, limit },\n                headers: {\n                    'Authorization': token\n                }\n            });\n            return response.data;\n        } catch (error) {\n            throw error;\n        }\n    },\n\n    getById: async (id) => {\n        try {\n            const response = await axios.get(`${API_URL}/${id}`);\n            return response.data;\n        } catch (error) {\n            throw error;\n        }\n    },\n\n    create: async (userData) => {\n        try {\n            const response = await axios.post(`${API_URL}/register`, userData);\n            return response.data;\n        } catch (error) {\n            throw error;\n        }\n    },\n\n    update: async (id, userData) => {\n        try {\n            const response = await axios.put(`${API_URL}/update/${id}`, userData);\n            return response.data;\n        } catch (error) {\n            throw error;\n        }\n    },\n\n    delete: async (ids) => {\n        try {\n            const response = await axios.delete(API_URL, { data: { ids } });\n            return response.data;\n        } catch (error) {\n            throw error;\n        }\n    },\n\n    login: async (credentials) => {\n        try {\n            const response = await axios.post(`${API_URL}/login`, credentials);\n            return response.data;\n        } catch (error) {\n            throw error;\n        }\n    },\n\n    register: async (data) => {\n        try {\n            const response = await axios.post(`${API_URL}/register`, data);\n            return response.data;\n        } catch (error) {\n            throw error;\n        }\n    },\n\n    getProfile: async () => {\n        try {\n            const response = await axios.get(`${API_URL}/profile`);\n            return response.data;\n        } catch (error) {\n            throw error;\n        }\n    },\n\n    updateProfile: async (data) => {\n        try {\n            const response = await axios.put(`${API_URL}/profile`, data);\n            return response.data;\n        } catch (error) {\n            throw error;\n        }\n    },\n\n    changePassword: async (userId, data) => {\n        try {\n            const response = await axios.post(`${API_URL}/${userId}/change-password`, data);\n            return response.data;\n        } catch (error) {\n            throw error;\n        }\n    },\n\n    getRoles: async (userId) => {\n        try {\n            const response = await axios.get(`${API_URL}/${userId}/roles`);\n            return response.data;\n        } catch (error) {\n            throw error;\n        }\n    },\n\n    assignRoles: async (userId, roleIds) => {\n        try {\n            const response = await axios.post(`${API_URL}/${userId}/roles`, { roleIds });\n            return response.data;\n        } catch (error) {\n            throw error;\n        }\n    },\n\n    resetPassword: async (userId) => {\n        try {\n            const response = await axios.post(`${API_URL}/${userId}/reset-password`);\n            return response.data;\n        } catch (error) {\n            throw error;\n        }\n    }\n};\n\nexport default userApi; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}