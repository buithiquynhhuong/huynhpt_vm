{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:3076/api/vanminh/account-vanminh';\nconst userApi = {\n  getAll: async (page = 1, limit = 10) => {\n    try {\n      const response = await axios.post(API_URL, {\n        page,\n        limit\n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  getById: async id => {\n    try {\n      const response = await axios.get(`${API_URL}/${id}`);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  create: async userData => {\n    try {\n      const response = await axios.post(`${API_URL}/register`, userData);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  update: async (id, userData) => {\n    try {\n      const response = await axios.put(`${API_URL}/update/${id}`, userData);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  delete: async ids => {\n    try {\n      const response = await axios.delete(API_URL, {\n        data: {\n          ids\n        }\n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  login: async credentials => {\n    try {\n      const response = await axios.post(`${API_URL}/login`, credentials);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  register: data => {\n    const url = '/auth/register';\n    return axiosClient.post(url, data);\n  },\n  getProfile: () => {\n    const url = '/users/profile';\n    return axiosClient.get(url);\n  },\n  updateProfile: data => {\n    const url = '/users/profile';\n    return axiosClient.put(url, data);\n  },\n  changePassword: (userId, data) => {\n    const url = `/users/${userId}/change-password`;\n    return axiosClient.post(url, data);\n  },\n  getRoles: userId => {\n    const url = `/users/${userId}/roles`;\n    return axiosClient.get(url);\n  },\n  assignRoles: (userId, roleIds) => {\n    const url = `/users/${userId}/roles`;\n    return axiosClient.post(url, {\n      roleIds\n    });\n  },\n  resetPassword: userId => {\n    const url = `/users/${userId}/reset-password`;\n    return axiosClient.post(url);\n  }\n};\nexport default userApi;","map":{"version":3,"names":["axios","API_URL","userApi","getAll","page","limit","response","post","data","error","getById","id","get","create","userData","update","put","delete","ids","login","credentials","register","url","axiosClient","getProfile","updateProfile","changePassword","userId","getRoles","assignRoles","roleIds","resetPassword"],"sources":["/Users/huynhpt/Desktop/vanminhgroup-main/vanminhgroup-fe/src/api/userApi.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:3076/api/vanminh/account-vanminh';\n\nconst userApi = {\n    getAll: async (page = 1, limit = 10) => {\n        try {\n            const response = await axios.post(API_URL, { page, limit });\n            return response.data;\n        } catch (error) {\n            throw error;\n        }\n    },\n\n    getById: async (id) => {\n        try {\n            const response = await axios.get(`${API_URL}/${id}`);\n            return response.data;\n        } catch (error) {\n            throw error;\n        }\n    },\n\n    create: async (userData) => {\n        try {\n            const response = await axios.post(`${API_URL}/register`, userData);\n            return response.data;\n        } catch (error) {\n            throw error;\n        }\n    },\n\n    update: async (id, userData) => {\n        try {\n            const response = await axios.put(`${API_URL}/update/${id}`, userData);\n            return response.data;\n        } catch (error) {\n            throw error;\n        }\n    },\n\n    delete: async (ids) => {\n        try {\n            const response = await axios.delete(API_URL, { data: { ids } });\n            return response.data;\n        } catch (error) {\n            throw error;\n        }\n    },\n\n    login: async (credentials) => {\n        try {\n            const response = await axios.post(`${API_URL}/login`, credentials);\n            return response.data;\n        } catch (error) {\n            throw error;\n        }\n    },\n\n    register: (data) => {\n        const url = '/auth/register';\n        return axiosClient.post(url, data);\n    },\n\n    getProfile: () => {\n        const url = '/users/profile';\n        return axiosClient.get(url);\n    },\n\n    updateProfile: (data) => {\n        const url = '/users/profile';\n        return axiosClient.put(url, data);\n    },\n\n    changePassword: (userId, data) => {\n        const url = `/users/${userId}/change-password`;\n        return axiosClient.post(url, data);\n    },\n\n    getRoles: (userId) => {\n        const url = `/users/${userId}/roles`;\n        return axiosClient.get(url);\n    },\n\n    assignRoles: (userId, roleIds) => {\n        const url = `/users/${userId}/roles`;\n        return axiosClient.post(url, { roleIds });\n    },\n\n    resetPassword: (userId) => {\n        const url = `/users/${userId}/reset-password`;\n        return axiosClient.post(url);\n    }\n};\n\nexport default userApi; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}