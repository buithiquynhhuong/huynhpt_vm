{"ast":null,"code":"var _jsxFileName = \"/Users/huynhpt/Desktop/vanminhgroup-main/vanminhgroup-fe/src/pages/AssetTransferHistory.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography, Paper } from '@mui/material';\nimport DataTable from '../components/DataTable';\nimport assetTransferApi from '../api/assetTransferApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AssetTransferHistory = () => {\n  _s();\n  const [logs, setLogs] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [total, setTotal] = useState(0);\n  const fetchLogs = async () => {\n    try {\n      var _response$logs;\n      const response = await assetTransferApi.getLogs({\n        page: page + 1,\n        limit: rowsPerPage\n      });\n      console.log('Response logs:', response);\n\n      // Transform the data to ensure all object references are converted to strings\n      const transformedLogs = ((_response$logs = response.logs) === null || _response$logs === void 0 ? void 0 : _response$logs.map(log => {\n        var _log$assetId, _log$assetId2, _log$fromOffice, _log$toOffice, _log$transferBy;\n        return {\n          ...log,\n          assetName: `${((_log$assetId = log.assetId) === null || _log$assetId === void 0 ? void 0 : _log$assetId.name) || ''} - ${((_log$assetId2 = log.assetId) === null || _log$assetId2 === void 0 ? void 0 : _log$assetId2.code) || ''}`,\n          fromOffice: ((_log$fromOffice = log.fromOffice) === null || _log$fromOffice === void 0 ? void 0 : _log$fromOffice.label) || '',\n          toOffice: ((_log$toOffice = log.toOffice) === null || _log$toOffice === void 0 ? void 0 : _log$toOffice.label) || '',\n          transferBy: ((_log$transferBy = log.transferBy) === null || _log$transferBy === void 0 ? void 0 : _log$transferBy.name) || '',\n          transferDate: log.transferDate ? new Date(log.transferDate).toLocaleString() : '',\n          transferTypeText: log.transferType === 'IMPORT' ? 'Nhập kho' : 'Xuất kho',\n          statusText: log.status === 'PENDING' ? 'Đang xử lý' : log.status === 'COMPLETED' ? 'Hoàn thành' : 'Đã hủy',\n          reasonText: log.reason === 'NEW_IMPORT' ? 'Nhập mới' : log.reason === 'TRANSFER' ? 'Điều chuyển' : log.reason === 'RETURN' ? 'Trả về' : 'Bảo trì'\n        };\n      })) || [];\n      setLogs(transformedLogs);\n      setTotal(response.total || 0);\n    } catch (error) {\n      console.error('Error fetching transfer logs:', error);\n    }\n  };\n  useEffect(() => {\n    fetchLogs();\n  }, [page, rowsPerPage]);\n  const columns = [{\n    field: 'assetName',\n    headerName: 'Tài sản',\n    width: 200\n  }, {\n    field: 'transferType',\n    headerName: 'Loại',\n    width: 120,\n    renderCell: row => /*#__PURE__*/_jsxDEV(Chip, {\n      label: row.transferTypeText,\n      color: row.transferType === 'IMPORT' ? 'success' : 'info',\n      size: \"small\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this)\n  }, {\n    field: 'quantity',\n    headerName: 'Số lượng',\n    width: 100\n  }, {\n    field: 'fromOffice',\n    headerName: 'Từ văn phòng',\n    width: 150\n  }, {\n    field: 'toOffice',\n    headerName: 'Đến văn phòng',\n    width: 150\n  }, {\n    field: 'status',\n    headerName: 'Trạng thái',\n    width: 130,\n    renderCell: row => /*#__PURE__*/_jsxDEV(Chip, {\n      label: row.statusText,\n      color: row.status === 'COMPLETED' ? 'success' : row.status === 'PENDING' ? 'warning' : 'error',\n      size: \"small\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this)\n  }, {\n    field: 'reasonText',\n    headerName: 'Lý do',\n    width: 150\n  }, {\n    field: 'transferBy',\n    headerName: 'Người thực hiện',\n    width: 150\n  }, {\n    field: 'transferDate',\n    headerName: 'Ngày thực hiện',\n    width: 180\n  }, {\n    field: 'note',\n    headerName: 'Ghi chú',\n    width: 200\n  }];\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      sx: {\n        mb: 3\n      },\n      children: \"L\\u1ECBch s\\u1EED \\u0111i\\u1EC1u chuy\\u1EC3n kho\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n      columns: columns,\n      data: logs,\n      page: page,\n      rowsPerPage: rowsPerPage,\n      total: total,\n      onPageChange: (event, newPage) => setPage(newPage),\n      onRowsPerPageChange: event => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 9\n  }, this);\n};\n_s(AssetTransferHistory, \"h/rJ4diFekyU9THnKicM4wAD4S0=\");\n_c = AssetTransferHistory;\nexport default AssetTransferHistory;\nvar _c;\n$RefreshReg$(_c, \"AssetTransferHistory\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Paper","DataTable","assetTransferApi","jsxDEV","_jsxDEV","AssetTransferHistory","_s","logs","setLogs","page","setPage","rowsPerPage","setRowsPerPage","total","setTotal","fetchLogs","_response$logs","response","getLogs","limit","console","log","transformedLogs","map","_log$assetId","_log$assetId2","_log$fromOffice","_log$toOffice","_log$transferBy","assetName","assetId","name","code","fromOffice","label","toOffice","transferBy","transferDate","Date","toLocaleString","transferTypeText","transferType","statusText","status","reasonText","reason","error","columns","field","headerName","width","renderCell","row","Chip","color","size","fileName","_jsxFileName","lineNumber","columnNumber","sx","p","children","variant","mb","data","onPageChange","event","newPage","onRowsPerPageChange","parseInt","target","value","_c","$RefreshReg$"],"sources":["/Users/huynhpt/Desktop/vanminhgroup-main/vanminhgroup-fe/src/pages/AssetTransferHistory.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n    Box,\n    Typography,\n    Paper\n} from '@mui/material';\nimport DataTable from '../components/DataTable';\nimport assetTransferApi from '../api/assetTransferApi';\n\nconst AssetTransferHistory = () => {\n    const [logs, setLogs] = useState([]);\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(10);\n    const [total, setTotal] = useState(0);\n\n    const fetchLogs = async () => {\n        try {\n            const response = await assetTransferApi.getLogs({\n                page: page + 1,\n                limit: rowsPerPage\n            });\n            console.log('Response logs:', response);\n            \n            // Transform the data to ensure all object references are converted to strings\n            const transformedLogs = response.logs?.map(log => ({\n                ...log,\n                assetName: `${log.assetId?.name || ''} - ${log.assetId?.code || ''}`,\n                fromOffice: log.fromOffice?.label || '',\n                toOffice: log.toOffice?.label || '',\n                transferBy: log.transferBy?.name || '',\n                transferDate: log.transferDate ? new Date(log.transferDate).toLocaleString() : '',\n                transferTypeText: log.transferType === 'IMPORT' ? 'Nhập kho' : 'Xuất kho',\n                statusText: log.status === 'PENDING' ? 'Đang xử lý' : \n                           log.status === 'COMPLETED' ? 'Hoàn thành' : 'Đã hủy',\n                reasonText: log.reason === 'NEW_IMPORT' ? 'Nhập mới' :\n                          log.reason === 'TRANSFER' ? 'Điều chuyển' :\n                          log.reason === 'RETURN' ? 'Trả về' : 'Bảo trì'\n            })) || [];\n            \n            setLogs(transformedLogs);\n            setTotal(response.total || 0);\n        } catch (error) {\n            console.error('Error fetching transfer logs:', error);\n        }\n    };\n\n    useEffect(() => {\n        fetchLogs();\n    }, [page, rowsPerPage]);\n\n    const columns = [\n        {\n            field: 'assetName',\n            headerName: 'Tài sản',\n            width: 200\n        },\n        {\n            field: 'transferType',\n            headerName: 'Loại',\n            width: 120,\n            renderCell: (row) => (\n                <Chip\n                    label={row.transferTypeText}\n                    color={row.transferType === 'IMPORT' ? 'success' : 'info'}\n                    size=\"small\"\n                />\n            )\n        },\n        {\n            field: 'quantity',\n            headerName: 'Số lượng',\n            width: 100\n        },\n        {\n            field: 'fromOffice',\n            headerName: 'Từ văn phòng',\n            width: 150\n        },\n        {\n            field: 'toOffice',\n            headerName: 'Đến văn phòng',\n            width: 150\n        },\n        {\n            field: 'status',\n            headerName: 'Trạng thái',\n            width: 130,\n            renderCell: (row) => (\n                <Chip\n                    label={row.statusText}\n                    color={\n                        row.status === 'COMPLETED' ? 'success' :\n                        row.status === 'PENDING' ? 'warning' : 'error'\n                    }\n                    size=\"small\"\n                />\n            )\n        },\n        {\n            field: 'reasonText',\n            headerName: 'Lý do',\n            width: 150\n        },\n        {\n            field: 'transferBy',\n            headerName: 'Người thực hiện',\n            width: 150\n        },\n        {\n            field: 'transferDate',\n            headerName: 'Ngày thực hiện',\n            width: 180\n        },\n        {\n            field: 'note',\n            headerName: 'Ghi chú',\n            width: 200\n        }\n    ];\n\n    return (\n        <Box sx={{ p: 3 }}>\n            <Typography variant=\"h5\" sx={{ mb: 3 }}>\n                Lịch sử điều chuyển kho\n            </Typography>\n\n            <DataTable\n                columns={columns}\n                data={logs}\n                page={page}\n                rowsPerPage={rowsPerPage}\n                total={total}\n                onPageChange={(event, newPage) => setPage(newPage)}\n                onRowsPerPageChange={(event) => {\n                    setRowsPerPage(parseInt(event.target.value, 10));\n                    setPage(0);\n                }}\n            />\n        </Box>\n    );\n};\n\nexport default AssetTransferHistory; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}