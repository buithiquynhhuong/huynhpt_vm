{"ast":null,"code":"import axiosClient from './axiosClient';\nimport { jwtDecode } from 'jwt-decode';\nconst getUserIdFromToken = () => {\n  const token = localStorage.getItem('token');\n  console.log('Token from localStorage:', token);\n  if (!token) {\n    console.warn('No token found in localStorage');\n    return null;\n  }\n  try {\n    const decoded = jwtDecode(token);\n    console.log('Decoded token:', decoded);\n\n    // Kiểm tra cả id và _id vì có thể backend trả về một trong hai\n    const userId = decoded.id || decoded._id;\n    console.log('Extracted userId:', userId);\n    if (!userId) {\n      console.warn('No id found in decoded token');\n      return null;\n    }\n    return userId;\n  } catch (error) {\n    console.error('Error decoding token:', error);\n    return null;\n  }\n};\nconst assetTransferApi = {\n  getLogs: params => {\n    const url = '/asset-transfer/logs';\n    return axiosClient.get(url, {\n      params\n    });\n  },\n  importAsset: data => {\n    const url = '/asset-transfer/import';\n    const userId = getUserIdFromToken();\n    const requestData = {\n      ...data,\n      userId\n    };\n    console.log('Import Asset Request Data:', requestData);\n    return axiosClient.post(url, requestData);\n  },\n  exportAsset: data => {\n    const url = '/asset-transfer/export';\n    const userId = getUserIdFromToken();\n    console.log('UserId extracted from token:', userId);\n    if (!userId) {\n      console.error('No userId found from token');\n      throw new Error('Không tìm thấy thông tin người dùng');\n    }\n    const requestData = {\n      ...data,\n      userId\n    };\n    console.log('Final Export Asset Request Data:', requestData);\n    return axiosClient.post(url, requestData);\n  },\n  getInventory: assetId => {\n    const url = `/asset-transfer/inventory/${assetId}`;\n    return axiosClient.get(url);\n  }\n};\nexport default assetTransferApi;","map":{"version":3,"names":["axiosClient","jwtDecode","getUserIdFromToken","token","localStorage","getItem","console","log","warn","decoded","userId","id","_id","error","assetTransferApi","getLogs","params","url","get","importAsset","data","requestData","post","exportAsset","Error","getInventory","assetId"],"sources":["/Users/huynhpt/Desktop/vanminhgroup-main copy/vanminhgroup-fe/src/api/assetTransferApi.js"],"sourcesContent":["import axiosClient from './axiosClient';\nimport { jwtDecode } from 'jwt-decode';\n\nconst getUserIdFromToken = () => {\n    const token = localStorage.getItem('token');\n    console.log('Token from localStorage:', token);\n    \n    if (!token) {\n        console.warn('No token found in localStorage');\n        return null;\n    }\n    \n    try {\n        const decoded = jwtDecode(token);\n        console.log('Decoded token:', decoded);\n        \n        // Kiểm tra cả id và _id vì có thể backend trả về một trong hai\n        const userId = decoded.id || decoded._id;\n        console.log('Extracted userId:', userId);\n        \n        if (!userId) {\n            console.warn('No id found in decoded token');\n            return null;\n        }\n        \n        return userId;\n    } catch (error) {\n        console.error('Error decoding token:', error);\n        return null;\n    }\n};\n\nconst assetTransferApi = {\n    getLogs: (params) => {\n        const url = '/asset-transfer/logs';\n        return axiosClient.get(url, { params });\n    },\n\n    importAsset: (data) => {\n        const url = '/asset-transfer/import';\n        const userId = getUserIdFromToken();\n        const requestData = { ...data, userId };\n        console.log('Import Asset Request Data:', requestData);\n        return axiosClient.post(url, requestData);\n    },\n\n    exportAsset: (data) => {\n        const url = '/asset-transfer/export';\n        const userId = getUserIdFromToken();\n        console.log('UserId extracted from token:', userId);\n        \n        if (!userId) {\n            console.error('No userId found from token');\n            throw new Error('Không tìm thấy thông tin người dùng');\n        }\n        \n        const requestData = { ...data, userId };\n        console.log('Final Export Asset Request Data:', requestData);\n        return axiosClient.post(url, requestData);\n    },\n\n    getInventory: (assetId) => {\n        const url = `/asset-transfer/inventory/${assetId}`;\n        return axiosClient.get(url);\n    }\n};\n\nexport default assetTransferApi; "],"mappings":"AAAA,OAAOA,WAAW,MAAM,eAAe;AACvC,SAASC,SAAS,QAAQ,YAAY;AAEtC,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAC7B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3CC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEJ,KAAK,CAAC;EAE9C,IAAI,CAACA,KAAK,EAAE;IACRG,OAAO,CAACE,IAAI,CAAC,gCAAgC,CAAC;IAC9C,OAAO,IAAI;EACf;EAEA,IAAI;IACA,MAAMC,OAAO,GAAGR,SAAS,CAACE,KAAK,CAAC;IAChCG,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEE,OAAO,CAAC;;IAEtC;IACA,MAAMC,MAAM,GAAGD,OAAO,CAACE,EAAE,IAAIF,OAAO,CAACG,GAAG;IACxCN,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEG,MAAM,CAAC;IAExC,IAAI,CAACA,MAAM,EAAE;MACTJ,OAAO,CAACE,IAAI,CAAC,8BAA8B,CAAC;MAC5C,OAAO,IAAI;IACf;IAEA,OAAOE,MAAM;EACjB,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZP,OAAO,CAACO,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,OAAO,IAAI;EACf;AACJ,CAAC;AAED,MAAMC,gBAAgB,GAAG;EACrBC,OAAO,EAAGC,MAAM,IAAK;IACjB,MAAMC,GAAG,GAAG,sBAAsB;IAClC,OAAOjB,WAAW,CAACkB,GAAG,CAACD,GAAG,EAAE;MAAED;IAAO,CAAC,CAAC;EAC3C,CAAC;EAEDG,WAAW,EAAGC,IAAI,IAAK;IACnB,MAAMH,GAAG,GAAG,wBAAwB;IACpC,MAAMP,MAAM,GAAGR,kBAAkB,CAAC,CAAC;IACnC,MAAMmB,WAAW,GAAG;MAAE,GAAGD,IAAI;MAAEV;IAAO,CAAC;IACvCJ,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEc,WAAW,CAAC;IACtD,OAAOrB,WAAW,CAACsB,IAAI,CAACL,GAAG,EAAEI,WAAW,CAAC;EAC7C,CAAC;EAEDE,WAAW,EAAGH,IAAI,IAAK;IACnB,MAAMH,GAAG,GAAG,wBAAwB;IACpC,MAAMP,MAAM,GAAGR,kBAAkB,CAAC,CAAC;IACnCI,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEG,MAAM,CAAC;IAEnD,IAAI,CAACA,MAAM,EAAE;MACTJ,OAAO,CAACO,KAAK,CAAC,4BAA4B,CAAC;MAC3C,MAAM,IAAIW,KAAK,CAAC,qCAAqC,CAAC;IAC1D;IAEA,MAAMH,WAAW,GAAG;MAAE,GAAGD,IAAI;MAAEV;IAAO,CAAC;IACvCJ,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEc,WAAW,CAAC;IAC5D,OAAOrB,WAAW,CAACsB,IAAI,CAACL,GAAG,EAAEI,WAAW,CAAC;EAC7C,CAAC;EAEDI,YAAY,EAAGC,OAAO,IAAK;IACvB,MAAMT,GAAG,GAAG,6BAA6BS,OAAO,EAAE;IAClD,OAAO1B,WAAW,CAACkB,GAAG,CAACD,GAAG,CAAC;EAC/B;AACJ,CAAC;AAED,eAAeH,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}